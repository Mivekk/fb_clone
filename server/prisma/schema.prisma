// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider                  = "typegraphql-prisma"
  output                    = "../src/generated/type-graphql"
  omitInputFieldsByDefault  = ["createdAt", "updatedAt"]
  omitOutputFieldsByDefault = ["password"]
  simpleResolvers           = true
}

model User {
  id             Int        @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String     @unique
  password       String?
  image_url      String?
  tokenVersion   Int        @default(0)
  posts          Post[]
  comments       Comment[]
  reactions      Reaction[]
  friends        User[]     @relation("UserFriends")
  prisma_friends User[]     @relation("UserFriends")
  external_type  String?
  external_id    String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Post {
  id        Int        @id @default(autoincrement())
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int
  title     String
  body      String
  image_url String?
  comments  Comment[]
  reactions Reaction[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Comment {
  id        Int        @id @default(autoincrement())
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post       @relation(fields: [postId], references: [id])
  postId    Int
  reactions Reaction[]
  replies   Comment[]  @relation("Replies")
  reply     Comment?   @relation("Replies", fields: [replyId], references: [id])
  replyId   Int?
  body      String
  image_url String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum ReactionType {
  LIKE
  DISLIKE
}

model Reaction {
  id        Int          @id @default(autoincrement())
  author    User         @relation(fields: [authorId], references: [id])
  authorId  Int
  type      ReactionType
  post      Post         @relation(fields: [postId], references: [id])
  postId    Int
  comment   Comment?     @relation(fields: [commentId], references: [id])
  commentId Int?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}
